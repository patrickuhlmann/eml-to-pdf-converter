buildscript {
	repositories {
        mavenCentral()
    }
    dependencies {
    	classpath group: 'net.sf.proguard', name: 'proguard-gradle', version: '6.1.1'
    	classpath group: 'org.ajoberstar', name: 'gradle-git', version: '1.7.2'
    }
}

plugins {
  id 'java'
  id 'eclipse'
  
  id 'checkstyle'
  id 'findbugs'
  id 'jdepend'
  
  id 'jacoco'
  
  id 'com.github.johnrengelman.shadow' version '5.1.0'
  id 'com.github.ben-manes.versions'  version '0.21.0'
}

sourceCompatibility = 1.7

/* calculate version */
ext.repo = org.ajoberstar.grgit.Grgit.open(currentDir: project.rootDir)
version = "${repo.tag.list().last().name}"

jar {
    manifest {
        attributes 'Main-Class': 'cli.Main',
        		   'Implementation-Title' : 'EML to PDF Converter',
        		   'Implementation-Version': version + "+${repo.branch.current.name}.${repo.head().abbreviatedId}"
    }
}

shadowJar {
  baseName = 'emailconverter'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.21'
    compile group: 'com.github.markusbernhardt', name: 'proxy-vole', version: '1.0.5'
	    
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.+'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.+'
}

/* proguard configuration */
task proguard(type: proguard.gradle.ProGuardTask) {
    injars "build/libs/EmailConverter-${version}-all.jar"
    outjars "build/libs/EmailConverter-${version}-all-opt.jar"
    configuration file("gradle/resources/proguard.cfg")
}
proguard.mustRunAfter shadowJar

/* launch4j launch configuration */
task launch4j_rename(type: Copy) {
  from "build/libs/emailconverter-${version}-all.jar"
  into 'build/libs/'
  rename {String fileName -> 'emailconverter.jar'}
}
launch4j_rename.mustRunAfter shadowJar

task launch4j(type:Exec) {
  workingDir '.'

  //on windows:
  commandLine 'launch4jc', 'gradle/resources/launch4j.xml'
}
launch4j.dependsOn launch4j_rename

task launch4j_gui(type:Exec) {
  workingDir '.'

  //on windows:
  commandLine 'launch4jc', 'gradle/resources/launch4j_gui.xml'
}
launch4j.dependsOn launch4j_rename

/* custom jar build task */
task dist(type: Copy) {
}
dist.dependsOn shadowJar, launch4j, launch4j_gui

/* innosetup generation */
task innosetup(type:Exec) {
  workingDir '.'
  commandLine 'iscc', "/dMyAppVersion=${version}", 'gradle/resources/innosetup.iss'
}
innosetup.dependsOn dist

/* jacoco configuration */
check.dependsOn jacocoTestReport, dependencyUpdates
jacocoTestReport.mustRunAfter test
dependencyUpdates.mustRunAfter jacocoTestReport

/* checkstyle configuration */
checkstyle {
	configFile = file("src/test/resources/checkstyle.xml")
}

/* findbugs configuration */
findbugs {
	effort 'max'
	reportLevel 'high'
	excludeFilter file("src/test/resources/findbugsExcludeFilter.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
